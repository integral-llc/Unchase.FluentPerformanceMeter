<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Unchase.PerformanceMeter</name>
    </assembly>
    <members>
        <member name="T:Unchase.PerformanceMeter.IgnoreMethodPerformanceAttribute">
            <summary>
            Attribute to indicate that no performance watching will be performed for this method.
            </summary>
        </member>
        <member name="T:Unchase.PerformanceMeter.IPerformanceCommand">
            <summary>
            Command for executing after stop watching method performance.
            </summary>
        </member>
        <member name="P:Unchase.PerformanceMeter.IPerformanceCommand.CommandName">
            <summary>
            Command Name.
            </summary>
        </member>
        <member name="M:Unchase.PerformanceMeter.IPerformanceCommand.Execute(Unchase.PerformanceMeter.IPerformanceInfo)">
            <summary>
            Execute command.
            </summary>
            <param name="performanceInfo"><see cref="T:Unchase.PerformanceMeter.IPerformanceInfo"/>.</param>
        </member>
        <member name="T:Unchase.PerformanceMeter.IPerformanceInfo">
            <summary>
            Method performance information.
            </summary>
        </member>
        <member name="P:Unchase.PerformanceMeter.IPerformanceInfo.MethodCalls">
            <summary>
            List of method calls information.
            </summary>
            <remarks>
            <see cref="T:Unchase.PerformanceMeter.MethodCallInfo`1"/>.
            </remarks>
        </member>
        <member name="P:Unchase.PerformanceMeter.IPerformanceInfo.TotalActivity">
            <summary>
            List of total method calls count information.
            </summary>
            <remarks>
            <see cref="T:Unchase.PerformanceMeter.MethodCallsCount`1"/>.
            </remarks>
        </member>
        <member name="P:Unchase.PerformanceMeter.IPerformanceInfo.CurrentActivity">
            <summary>
            List of current method calls count information.
            </summary>
            <remarks>
            <see cref="T:Unchase.PerformanceMeter.MethodCallsCount`1"/>.
            </remarks>
        </member>
        <member name="P:Unchase.PerformanceMeter.IPerformanceInfo.UptimeSince">
            <summary>
            Uptime.
            </summary>
        </member>
        <member name="P:Unchase.PerformanceMeter.IPerformanceInfo.ClassName">
            <summary>
            Class name.
            </summary>
        </member>
        <member name="P:Unchase.PerformanceMeter.IPerformanceInfo.MethodNames">
            <summary>
            List of method names.
            </summary>
        </member>
        <member name="P:Unchase.PerformanceMeter.IPerformanceInfo.CustomData">
            <summary>
            Custom data.
            </summary>
        </member>
        <member name="T:Unchase.PerformanceMeter.Performance`1">
            <summary>
            Additional class for performance information.
            </summary>
            <typeparam name="TClass">Class with public methods.</typeparam>
        </member>
        <member name="P:Unchase.PerformanceMeter.Performance`1.PerformanceInfo">
            <summary>
            Methods performance information.
            </summary>
        </member>
        <member name="P:Unchase.PerformanceMeter.Performance`1.MethodCallsCacheTime">
            <summary>
            Time in minutes to clear list of the method calls.
            </summary>
            <remarks>
            <see cref="P:Unchase.PerformanceMeter.IPerformanceInfo.MethodCalls"/>.
            </remarks>
        </member>
        <member name="M:Unchase.PerformanceMeter.Performance`1.SetCustomPerformanceInfo(Unchase.PerformanceMeter.IPerformanceInfo)">
            <summary>
            Set custom handler for receiving data on the performance of methods.
            </summary>
            <param name="performanceInfo"><see cref="T:Unchase.PerformanceMeter.IPerformanceInfo"/>.</param>
        </member>
        <member name="M:Unchase.PerformanceMeter.Performance`1.Input(System.Reflection.MethodInfo)">
            <summary>
            Start watching method performance.
            </summary>
            <param name="method">Method with type <see cref="T:System.Reflection.MethodInfo"/>.</param>
        </member>
        <member name="M:Unchase.PerformanceMeter.Performance`1.Output(System.String,System.Reflection.MethodInfo,System.Diagnostics.Stopwatch,System.DateTime,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Stop watching method performance.
            </summary>
            <param name="caller">Caller name.</param>
            <param name="method">Method with type <see cref="T:System.Reflection.MethodInfo"/>.</param>
            <param name="sw"><see cref="T:System.Diagnostics.Stopwatch"/> to track the running time of a method.</param>
            <param name="dateStart">Method start date.</param>
            <param name="customData">Custom data for a specific method call.</param>
        </member>
        <member name="T:Unchase.PerformanceMeter.PerformanceInfo`1">
            <summary>
            Method performance information.
            </summary>
            <typeparam name="TClass">Class with public methods.</typeparam>
        </member>
        <member name="P:Unchase.PerformanceMeter.PerformanceInfo`1.MethodCalls">
            <summary>
            List of method calls information.
            </summary>
            <remarks>
            <see cref="T:Unchase.PerformanceMeter.MethodCallInfo`1"/>.
            </remarks>
        </member>
        <member name="P:Unchase.PerformanceMeter.PerformanceInfo`1.TotalActivity">
            <summary>
            List of total method calls count information.
            </summary>
            <remarks>
            <see cref="T:Unchase.PerformanceMeter.MethodCallsCount`1"/>.
            </remarks>
        </member>
        <member name="P:Unchase.PerformanceMeter.PerformanceInfo`1.CurrentActivity">
            <summary>
            List of current method calls count information.
            </summary>
            <remarks>
            <see cref="T:Unchase.PerformanceMeter.MethodCallsCount`1"/>.
            </remarks>
        </member>
        <member name="P:Unchase.PerformanceMeter.PerformanceInfo`1.UptimeSince">
            <summary>
            Uptime.
            </summary>
        </member>
        <member name="P:Unchase.PerformanceMeter.PerformanceInfo`1.ClassName">
            <summary>
            Class name.
            </summary>
        </member>
        <member name="P:Unchase.PerformanceMeter.PerformanceInfo`1.MethodNames">
            <summary>
            List of method names.
            </summary>
        </member>
        <member name="P:Unchase.PerformanceMeter.PerformanceInfo`1.CustomData">
            <summary>
            Custom data.
            </summary>
        </member>
        <member name="M:Unchase.PerformanceMeter.PerformanceInfo`1.#ctor">
            <summary>
            Constructor for <see cref="T:Unchase.PerformanceMeter.PerformanceInfo`1"/>.
            </summary>
        </member>
        <member name="T:Unchase.PerformanceMeter.MethodCallInfo`1">
            <summary>
            Method calls information.
            </summary>
            <typeparam name="T">Method with type <see cref="T:System.Reflection.MethodInfo"/>.</typeparam>
        </member>
        <member name="P:Unchase.PerformanceMeter.MethodCallInfo`1.Method">
            <summary>
            Method information.
            </summary>
            <remarks>
            <see cref="T:System.Reflection.MethodInfo"/>.
            </remarks>
        </member>
        <member name="P:Unchase.PerformanceMeter.MethodCallInfo`1.MethodName">
            <summary>
            Method name.
            </summary>
        </member>
        <member name="P:Unchase.PerformanceMeter.MethodCallInfo`1.DurationMiliseconds">
            <summary>
            Method call duration in milliseconds.
            </summary>
        </member>
        <member name="P:Unchase.PerformanceMeter.MethodCallInfo`1.Caller">
            <summary>
            Caller name.
            </summary>
        </member>
        <member name="P:Unchase.PerformanceMeter.MethodCallInfo`1.StartTime">
            <summary>
            Method call start date.
            </summary>
        </member>
        <member name="P:Unchase.PerformanceMeter.MethodCallInfo`1.EndTime">
            <summary>
            Method call end date.
            </summary>
        </member>
        <member name="P:Unchase.PerformanceMeter.MethodCallInfo`1.CustomData">
            <summary>
            Custom data for a specific method call.
            </summary>
        </member>
        <member name="M:Unchase.PerformanceMeter.MethodCallInfo`1.#ctor">
            <summary>
            Default constructor for <see cref="T:Unchase.PerformanceMeter.MethodCallInfo`1"/>.
            </summary>
        </member>
        <member name="M:Unchase.PerformanceMeter.MethodCallInfo`1.#ctor(`0,System.Int64,System.String,System.DateTime,System.DateTime,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Constructor for <see cref="T:Unchase.PerformanceMeter.MethodCallInfo`1"/>.
            </summary>
            <param name="m"><see cref="P:Unchase.PerformanceMeter.MethodCallInfo`1.Method"/>.</param>
            <param name="duration"><see cref="P:Unchase.PerformanceMeter.MethodCallInfo`1.DurationMiliseconds"/>.</param>
            <param name="caller"><see cref="P:Unchase.PerformanceMeter.MethodCallInfo`1.Caller"/>.</param>
            <param name="ds"><see cref="P:Unchase.PerformanceMeter.MethodCallInfo`1.StartTime"/>.</param>
            <param name="de"><see cref="P:Unchase.PerformanceMeter.MethodCallInfo`1.EndTime"/>.</param>
            <param name="customData"><see cref="P:Unchase.PerformanceMeter.MethodCallInfo`1.CustomData"/>.</param>
        </member>
        <member name="T:Unchase.PerformanceMeter.MethodCallsCount`1">
            <summary>
            Method calls count information.
            </summary>
            <typeparam name="T">Method with type <see cref="T:System.Reflection.MethodInfo"/>.</typeparam>
        </member>
        <member name="P:Unchase.PerformanceMeter.MethodCallsCount`1.Method">
            <summary>
            Method information.
            </summary>
            <remarks>
            <see cref="T:System.Reflection.MethodInfo"/>.
            </remarks>
        </member>
        <member name="P:Unchase.PerformanceMeter.MethodCallsCount`1.MethodName">
            <summary>
            Method name.
            </summary>
        </member>
        <member name="P:Unchase.PerformanceMeter.MethodCallsCount`1.CallsCount">
            <summary>
            Method calls count.
            </summary>
        </member>
        <member name="M:Unchase.PerformanceMeter.MethodCallsCount`1.#ctor">
            <summary>
            Default constructor for <see cref="T:Unchase.PerformanceMeter.MethodCallsCount`1"/>.
            </summary>
        </member>
        <member name="M:Unchase.PerformanceMeter.MethodCallsCount`1.#ctor(`0)">
            <summary>
            Constructor for <see cref="T:Unchase.PerformanceMeter.MethodCallsCount`1"/>.
            </summary>
            <param name="m"><see cref="P:Unchase.PerformanceMeter.MethodCallsCount`1.Method"/>.</param>
        </member>
        <member name="T:Unchase.PerformanceMeter.PerformanceMeter`1">
            <summary>
            Class for starting and stopping method performance wathing.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
        </member>
        <member name="P:Unchase.PerformanceMeter.PerformanceMeter`1.MethodInfo">
            <summary>
            Method information.
            </summary>
            <returns>
            Returns method information with type <see cref="T:System.Reflection.MethodInfo"/>.
            </returns>
        </member>
        <member name="P:Unchase.PerformanceMeter.PerformanceMeter`1.MethodCallsCacheTime">
            <summary>
            Time in minutes to clear list of the method calls.
            </summary>
            <remarks>
            <see cref="P:Unchase.PerformanceMeter.IPerformanceInfo.MethodCalls"/>.
            </remarks>
        </member>
        <member name="P:Unchase.PerformanceMeter.PerformanceMeter`1.RegisteredCommands">
            <summary>
            Collection of registered executed commands.
            </summary>
            <remarks>
            <see cref="T:Unchase.PerformanceMeter.IPerformanceCommand"/>.
            </remarks>
        </member>
        <member name="M:Unchase.PerformanceMeter.PerformanceMeter`1.#ctor(System.Reflection.MethodInfo)">
            <summary>
            Private constructor for <see cref="T:Unchase.PerformanceMeter.PerformanceMeter`1"/>.
            </summary>
        </member>
        <member name="M:Unchase.PerformanceMeter.PerformanceMeter`1.#cctor">
            <summary>
            Static constructor for <see cref="T:Unchase.PerformanceMeter.PerformanceMeter`1"/>.
            </summary>
        </member>
        <member name="M:Unchase.PerformanceMeter.PerformanceMeter`1.Watching(System.Reflection.MethodInfo)">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="method">Method with type <see cref="T:System.Reflection.MethodInfo"/>.</param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.PerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.PerformanceMeter.PerformanceMeter`1.Watching(System.String,System.String,System.Int32)">
            <summary>
            Create an instance of the class to watching method performance.
            </summary>
            <param name="methodName">Method name.</param>
            <param name="callerSource">Source file path.</param>
            <param name="callerSourceLineNumber">Line number.</param>
            <returns>
            Returns an instance of the class with type <see cref="T:Unchase.PerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.PerformanceMeter.PerformanceMeter`1.SetHttpContextAccessor(Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Set <see cref="T:Microsoft.AspNetCore.Http.IHttpContextAccessor"/> to get the ip address of the caller.
            </summary>
            <param name="httpContextAccessor"><see cref="T:Microsoft.AspNetCore.Http.IHttpContextAccessor"/>.</param>
        </member>
        <member name="M:Unchase.PerformanceMeter.PerformanceMeter`1.SetExceptionHandler(System.Action{System.Exception})">
            <summary>
            Set Action to handle exceptions that occur.
            </summary>
            <param name="exceptionHandler">Action to handle exceptions that occur.</param>
        </member>
        <member name="M:Unchase.PerformanceMeter.PerformanceMeter`1.SetCallerAddress(System.String)">
            <summary>
            Set caller name.
            </summary>
            <param name="caller">Caller name.</param>
        </member>
        <member name="M:Unchase.PerformanceMeter.PerformanceMeter`1.RegisterCommands(Unchase.PerformanceMeter.IPerformanceCommand[])">
            <summary>
            Register commands which will be executed after the performance watching is completed.
            </summary>
            <param name="performanceCommands">Collection of the executed commands.</param>
        </member>
        <member name="M:Unchase.PerformanceMeter.PerformanceMeter`1.AddMethodCallCustomData(System.String,System.Object)">
            <summary>
            Add custom data.
            </summary>
            <param name="key">Key.</param>
            <param name="value">Value.</param>
        </member>
        <member name="M:Unchase.PerformanceMeter.PerformanceMeter`1.AddCustomData(System.String,System.Object)">
            <summary>
            Add custom data.
            </summary>
            <param name="key">Key.</param>
            <param name="value">Value.</param>
        </member>
        <member name="M:Unchase.PerformanceMeter.PerformanceMeter`1.SetCustomPerformanceInfo(Unchase.PerformanceMeter.IPerformanceInfo)">
            <summary>
            Set custom handler to receive methods performance information.
            </summary>
            <param name="performanceInfo"><see cref="T:Unchase.PerformanceMeter.IPerformanceInfo"/>.</param>
        </member>
        <member name="M:Unchase.PerformanceMeter.PerformanceMeter`1.SetDefaultExceptionHandler(System.Action{System.Exception})">
            <summary>
            Set Action to handle exceptions that occur by default.
            </summary>
            <param name="exceptionHandler">Action to handle exceptions that occur.</param>
        </member>
        <member name="M:Unchase.PerformanceMeter.PerformanceMeter`1.SetMethodCallsCacheTime(System.Int32)">
            <summary>
            Set the time in minutes to clear list of the method calls.
            </summary>
            <param name="minutes">Time in minutes to clear list of the method calls.</param>
        </member>
        <member name="M:Unchase.PerformanceMeter.PerformanceMeter`1.Start">
            <summary>
            Start watching method performance.
            </summary>
        </member>
        <member name="M:Unchase.PerformanceMeter.PerformanceMeter`1.Stop">
            <summary>
            Stop watching method performance.
            </summary>
        </member>
        <member name="M:Unchase.PerformanceMeter.PerformanceMeter`1.GetPerformanceInfo">
            <summary>
            Get methods performance information.
            </summary>
            <returns>
            Return method performance information with type <see cref="T:Unchase.PerformanceMeter.PerformanceInfo`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.PerformanceMeter.PerformanceMeter`1.Dispose">
            <summary>
            Dispose and stop watching method performance.
            </summary>
        </member>
        <member name="T:Unchase.PerformanceMeter.PerformanceMeterExtensions">
            <summary>
            Extension methods for the <see cref="T:Unchase.PerformanceMeter.PerformanceMeter`1"/>
            </summary>
        </member>
        <member name="M:Unchase.PerformanceMeter.PerformanceMeterExtensions.WithHttpContextAccessor``1(Unchase.PerformanceMeter.PerformanceMeter{``0},Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Set <see cref="T:Microsoft.AspNetCore.Http.IHttpContextAccessor"/> to get the ip address of the caller.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <param name="performanceMeter"><see cref="T:Unchase.PerformanceMeter.PerformanceMeter`1"/>.</param>
            <param name="httpContextAccessor"><see cref="T:Microsoft.AspNetCore.Http.IHttpContextAccessor"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.PerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.PerformanceMeter.PerformanceMeterExtensions.WithExceptionHandler``1(Unchase.PerformanceMeter.PerformanceMeter{``0},System.Action{System.Exception})">
            <summary>
            Set Action to handle exceptions that occur.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <param name="performanceMeter"><see cref="T:Unchase.PerformanceMeter.PerformanceMeter`1"/>.</param>
            <param name="exceptionHandler">Action to handle exceptions that occur.</param>
            <returns>
            Returns <see cref="T:Unchase.PerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.PerformanceMeter.PerformanceMeterExtensions.WithExecutingOnComplete``1(Unchase.PerformanceMeter.PerformanceMeter{``0},Unchase.PerformanceMeter.IPerformanceCommand[])">
            <summary>
            Register commands which will be executed after the performance watching is completed.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <param name="performanceMeter"><see cref="T:Unchase.PerformanceMeter.PerformanceMeter`1"/>.</param>
            <param name="performanceCommands">Collection of the executed commands.</param>
            <returns>
            Returns <see cref="T:Unchase.PerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.PerformanceMeter.PerformanceMeterExtensions.WithCaller``1(Unchase.PerformanceMeter.PerformanceMeter{``0},System.String)">
            <summary>
            Set caller name.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <param name="performanceMeter"><see cref="T:Unchase.PerformanceMeter.PerformanceMeter`1"/>.</param>
            <param name="caller">Caller name.</param>
            <returns>
            Returns <see cref="T:Unchase.PerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.PerformanceMeter.PerformanceMeterExtensions.WithCustomData``1(Unchase.PerformanceMeter.PerformanceMeter{``0},System.String,System.Object)">
            <summary>
            Add custom data.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <param name="performanceMeter"><see cref="T:Unchase.PerformanceMeter.PerformanceMeter`1"/>.</param>
            <param name="key">Key.</param>
            <param name="value">Value.</param>
            <returns>
            Returns <see cref="T:Unchase.PerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
        <member name="M:Unchase.PerformanceMeter.PerformanceMeterExtensions.Start``1(Unchase.PerformanceMeter.PerformanceMeter{``0})">
            <summary>
            Start watching method performance.
            </summary>
            <typeparam name="TClass">Class with methods.</typeparam>
            <param name="performanceMeter"><see cref="T:Unchase.PerformanceMeter.PerformanceMeter`1"/>.</param>
            <returns>
            Returns <see cref="T:Unchase.PerformanceMeter.PerformanceMeter`1"/>.
            </returns>
        </member>
    </members>
</doc>
